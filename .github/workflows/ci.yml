name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        port: 22
        script: |
          # Update system
          apt update -y
          
          # Install Docker if not exists
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            systemctl start docker
            systemctl enable docker
          fi
          
          # Install Docker Compose if not exists
          if ! command -v docker-compose &> /dev/null; then
            apt install -y docker-compose-plugin
            ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
          fi
          
          # Create project directory
          mkdir -p /var/www/huawei
          cd /var/www/huawei
          
          # Clone repository if not exists
          if [ ! -d ".git" ]; then
            git clone https://github.com/Radiit/huawei-employee-management.git .
          else
            git pull origin main
          fi
          
          # Create .env file
          cat > .env << EOF
          NODE_ENV=production
          PORT=3000
          HOST=0.0.0.0
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DIRECT_URL=${{ secrets.DIRECT_URL }}
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN=7d
          BCRYPT_ROUNDS=12
          RATE_LIMIT_WINDOW_MS=900000
          RATE_LIMIT_MAX_REQUESTS=100
          CORS_ORIGIN=*
          LOG_LEVEL=info
          EOF
          
          # Stop existing containers
          docker-compose down || true
          
          # Build and start containers
          docker-compose up -d --build
          
          # Show container status
          docker-compose ps
          
          # Show logs
          docker-compose logs api
          
          # Wait for services to be ready
          sleep 60
          
          # Health check with retry
          for i in {1..5}; do
            if curl -f http://localhost:3000/health; then
              echo "Health check passed!"
              break
            else
              echo "Health check failed, retrying in 10 seconds... ($i/5)"
              sleep 10
            fi
          done
          
          # Setup cron jobs
          docker-compose exec -T api node src/scripts/supabaseCronSetup.js setup || true
          
          echo "Deployment completed successfully!"